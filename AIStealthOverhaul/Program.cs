using AIStealthOverhaul.Settings;
using Mutagen.Bethesda;
using Mutagen.Bethesda.Skyrim;
using Mutagen.Bethesda.Synthesis;

namespace AIStealthOverhaul
{
    public static class Program
    {
        private static Lazy<TopLevelSettings> _lazySettings = null!;
        private static TopLevelSettings Settings => _lazySettings.Value;

        public static async Task<int> Main(string[] args)
            => await SynthesisPipeline.Instance
                   .AddPatch<ISkyrimMod, ISkyrimModGetter>(RunPatch)
                   .SetAutogeneratedSettings("Settings", "settings.json", out _lazySettings)
                   .SetTypicalOpen(GameRelease.SkyrimSE, "StealthOverhaul.esp")
                   .Run(args)
                   .ConfigureAwait(false);

        public static void RunPatch(IPatcherState<ISkyrimMod, ISkyrimModGetter> state)
        {
            ImportPreset();

            Console.WriteLine("\n--- PATCHER STARTING ---"); // begin

            Settings.AddGameSettingsToPatchMod(state, out int count);

            Console.WriteLine("--- PATCHER COMPLETE ---");
            Console.WriteLine($"Modified {count} GameSetting record{(count.Equals(1) ? "" : "s")}.\n");

            if (count.Equals(0)) Console.WriteLine("!!! No changes were made; something probably went wrong !!!");

            ExportPreset();
        }

        private static void ExportPreset()
        {
            if (!Settings.PresetIO.IsExportToPathSet()) return;

            bool result = Settings.ExportPresetIfAvailable();

            if (result)
            {
                Console.WriteLine($"[INFO]\tSuccessfully exported {TopLevelSettings.GameSettingsName} to file \"{Settings.PresetIO.ExportToPath}\"");
            }
            else
            {
                Console.WriteLine($"[ERROR]\tFailed to export {TopLevelSettings.GameSettingsName} to file \"{Settings.PresetIO.ExportToPath}\"!");
            }
        }
        private static void ImportPreset()
        {
            if (!Settings.PresetIO.IsImportFromPathSet()) return;

            bool result = Settings.ImportPresetIfAvailable();

            if (result)
            {
                Console.WriteLine($"[INFO]\tSuccessfully imported {TopLevelSettings.GameSettingsName} from file \"{Settings.PresetIO.ImportFromPath}\"");
            }
            else
            {
                Console.WriteLine($"[ERROR]\tFailed to import {TopLevelSettings.GameSettingsName} from file \"{Settings.PresetIO.ImportFromPath}\"!");
            }
        }
    }
}